class Tree
{
    public ArrayList<Integer> reverseLevelOrder(Node node) 
    {
        Queue <Node> Q = new LinkedList<Node>();
        Stack <Node> S = new Stack <Node>();
        ArrayList<Integer> ans = new ArrayList<Integer>();
        Q.add(node);
        while(Q.isEmpty()==false)
        {
            node=Q.peek();
            Q.remove();
            S.push(node);
            if(node.right!=null)
            {
                Q.add(node.right);
            }
            if(node.left!=null)
            {
                Q.add(node.left);
            }
        }
        while(S.empty()==false)
        {
            node=S.peek();
            ans.add(node.data);
            S.pop();
        }
        return ans;
    }
}      
